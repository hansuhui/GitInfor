https://git-scm.com/book/ko/v1/Git-%EC%84%9C%EB%B2%84-%EC%84%9C%EB%B2%84%EC%97%90-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0

[서버에 설정하기]

서버에 설정하는 일을 살펴보자. 일단 Ubuntu같은 표준 리눅스 배포판을 사용한다고 가정한다. 
사용자는 아마도 authorized_keys 파일로 인증할 것이다. 
먼저 git 계정을 만들고 사용자 홈 디렉토리에 .ssh 디렉토리를 만든다:

$ sudo adduser git
$ su git
$ cd
$ mkdir .ssh

authorized_keys 파일에 SSH 공개키를 추가해야 사용자가 접근할 수 있다. 
추가하기 전에 이미 이메일로 공개키를 몇 개 받아서 가지고 있다고 가정하자. 
공개키가 어떻게 생겼는지 다시 한번 확인한다:

$ cat /tmp/id_rsa.john.pub
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCB007n/ww+ouN4gSLKssMxXnBOvf9LGt4L
ojG6rs6hPB09j9R/T17/x4lhJA0F3FR1rP6kYBRsWj2aThGw6HXLm9/5zytK6Ztg3RPKK+4k
Yjh6541NYsnEAZuXz0jTTyAUfrtU3Z5E003C4oxOj6H0rfIF1kKI9MAQLMdpGW1GYEIgS9Ez
Sdfd8AcCIicTDWbqLAcU4UpkaX8KyGlLwsNuuGztobF8m72ALC/nLF6JLtPofwFBlgc+myiv
O7TCUSBdLQlgMVOFq1I2uPWQOkOWQAHukEOmfjy2jctxSDBQ220ymjaNsHT4kgtZg2AYYgPq
dAv8JggJICUvax2T9va5 gsg-keypair

authorized_keys 파일에 추가한다:

$ cat /tmp/id_rsa.john.pub >> ~/.ssh/authorized_keys
$ cat /tmp/id_rsa.josie.pub >> ~/.ssh/authorized_keys
$ cat /tmp/id_rsa.jessica.pub >> ~/.ssh/authorized_keys

--bare 옵션을 주고 git init을 실행해서 워킹 디렉토리가 없는 빈 저장소를 하나 만든다:

$ cd /opt/git
$ mkdir project.git
$ cd project.git
$ git --bare init

이제 John씨, Josie씨, Jessica씨는 이 저장소를 리모트 저장소로 등록하면 
브랜치를 Push할 수 있다. 프로젝트마다 적어도 한 명은 서버에 접속하여 Bare 저장소를 만들어야 한다. 
git 계정과 저장소를 만든 서버의 호스트 이름이 gitserver라고 하자. 
만약 이 서버가 내부망에 있으면 gitserver가 그 서버를 가리키도록 DNS에 설정한다. 
그러면 명령을 아래와 같이 사용할 수 있다:

# on Johns computer
$ cd myproject
$ git init
$ git add .
$ git commit -m 'initial commit'
$ git remote add origin git@gitserver:/opt/git/project.git
$ git push origin master

이제 이 프로젝트를 Clone하고 나서 수정하고 Push한다:

$ git clone git@gitserver:/opt/git/project.git
$ cd project
$ vim README
$ git commit -am 'fix for the README file'
$ git push origin master

개발자들이 읽고 쓸 수 있는 Git 서버를 간단하게 만들었다.

그리고 git-shell이라는 걸 사용해서 보안을 강화할 수 있다. 
이 쉘로 git 계정을 사용하는 사용자들이 Git 말고 다른 것을 할 수 없도록 제한하는 것이다. 
git 계정의 로그인 쉘을 이것으로 설정하면 git 사용자는 일반적인 쉘을 사용할 수 없다. 
통상의 bash, csh 대신에 git-shell을 로그인 쉘로 설정하기만 하면 된다. 
이것을 하려면 /etc/passwd 파일을 편집한다:

$ sudo vim /etc/passwd

그리고 아래와 같은 줄을 찾는다:

git:x:1000:1000::/home/git:/bin/sh

/bin/sh를 /usr/bin/git-shell로(which git-shell 명령으로 어디에 설치됐는지 확인하는게 좋다) 
변경한다:

git:x:1000:1000::/home/git:/usr/bin/git-shell


이제 git 계정은 Git 저장소에 Push하고 Pull하는 것만 가능하고 
서버의 쉘에는 접근할 수 없다. 실제로 로그인을 해보면 아래와 같은 메시지로 로그인이 거절된다:

$ ssh git@gitserver
fatal: What do you think I am? A shell?
Connection to gitserver closed.


